cmake_minimum_required(VERSION 3.15)
cmake_policy(VERSION 3.15)
project(tt2023-ai)

set(CMAKE_CXX_STANDARD 17) # this does nothing for MSVC, use target_compile_options below
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS ON)
set(CMAKE_CXX_FLAGS "-Wall -Wextra -Wshadow -Wfloat-equal -Wduplicated-cond -Wcast-qual -Wcast-align -pedantic -pipe")
set(CMAKE_CXX_FLAGS_DEBUG "-g -fsanitize=undefined -fno-sanitize-recover -fstack-protector")
set(CMAKE_CXX_FLAGS_RELEASE "-Ofast -s -flto -ffat-lto-objects -feliminate-unused-debug-types -fno-stack-protector -fno-trapping-math")

option(PRINT_FROM_SENO_WITH_LOVE "Print From Seno with love <3" off)
option(TUNE_FOR_X86 "Tune for x86" off)

IF(PRINT_FROM_SENO_WITH_LOVE)
    add_compile_definitions(PRINT_MESSAGE)
endif(PRINT_FROM_SENO_WITH_LOVE)

IF(TUNE_FOR_X86)
    add_compile_options(-mavx2 -mbmi -mbmi2 -mpopcnt -mlzcnt)
endif(TUNE_FOR_X86)

if(WIN32)
    set(CMAKE_EXE_LINKER_FLAGS "-static")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin)
    configure_file(${CMAKE_SOURCE_DIR}/renamed/renamed_win.exe ${CMAKE_SOURCE_DIR}/bin/renamed.exe COPYONLY)
elseif(UNIX AND NOT APPLE)
    configure_file(${CMAKE_SOURCE_DIR}/renamed/renamed_win.exe ${CMAKE_SOURCE_DIR}/bin/renamed COPYONLY)
elseif(APPLE)
    configure_file(${CMAKE_SOURCE_DIR}/renamed/renamed_mac ${CMAKE_SOURCE_DIR}/bin/renamed COPYONLY)
endif(WIN32)

function(add_agent NAME)
    file(GLOB SOURCES algo/${NAME}/*.h algo/${NAME}/*.cpp)
    add_executable(${NAME} ${SOURCES})
    target_link_libraries(${NAME} ${LIBS})

    if(WIN32)
        set_target_properties(${NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/bin")
        set_target_properties(${NAME} PROPERTIES VS_DEBUGGER_WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}/bin")
    elseif(UNIX AND NOT APPLE)
        set_target_properties(${NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/bin")
    elseif(APPLE)
        set_target_properties(${NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/bin")
        set_target_properties(${NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG "${CMAKE_SOURCE_DIR}/bin")
        set_target_properties(${NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE "${CMAKE_SOURCE_DIR}/bin")
    endif(WIN32)

    if(MSVC)
        target_compile_options(${NAME} PRIVATE /std:c++17 /MP)
        target_link_options(${NAME} PUBLIC /ignore:4099)
    endif(MSVC)
endfunction()

add_agent(babyblue)
add_agent(felina)
add_agent(granitestate)
add_agent(heisenberg)
add_agent(oh-my-blue)
add_agent(omegastay)
add_agent(pinkman)
add_agent(random)
add_agent(tahp-estimate-shield-val)
add_agent(tahp-ignore-opponent)
add_agent(tahp-ignore-opponent-v2)
add_agent(zhong)
